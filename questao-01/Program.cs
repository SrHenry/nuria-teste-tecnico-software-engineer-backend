///? Questão 1: implemente uma função que inverta as diagonais de uma matriz quadrada.
using System;

int[][] matrix_3_3 = new int[][]
{
    new int[] { 1, 2, 3 },
    new int[] { 4, 5, 6 },
    new int[] { 7, 8, 9 }
};

int[][] matrix_5_5 = new int[][]
{
    new int[] { 1, 2, 3, 4, 5 },
    new int[] { 6, 7, 8, 9, 10 },
    new int[] { 11, 12, 13, 14, 15 },
    new int[] { 16, 17, 18, 19, 20 },
    new int[] { 21, 22, 23, 24, 25 }
};

int[][] matrix_7_7 = new int[][]
{
    new int[] { 1, 2, 3, 4, 5, 6, 7 },
    new int[] { 8, 9, 10, 11, 12, 13, 14 },
    new int[] { 15, 16, 17, 18, 19, 20, 21 },
    new int[] { 22, 23, 24, 25, 26, 27, 28 },
    new int[] { 29, 30, 31, 32, 33, 34, 35 },
    new int[] { 36, 37, 38, 39, 40, 41, 42 },
    new int[] { 43, 44, 45, 46, 47, 48, 49 }
};

int[][] matrix_10_10 = new int[][]
{
    new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },
    new int[] { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 },
    new int[] { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 },
    new int[] { 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 },
    new int[] { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 },
    new int[] { 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 },
    new int[] { 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 },
    new int[] { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 },
    new int[] { 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 },
    new int[] { 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }
};

int[][] matrix_20_20 = new int[][]
{
    new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 },
    new int[] { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 },
    new int[] { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 },
    new int[] { 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 },
    new int[] { 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 },
    new int[]
    {
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120
    },
    new int[]
    {
        121,
        122,
        123,
        124,
        125,
        126,
        127,
        128,
        129,
        130,
        131,
        132,
        133,
        134,
        135,
        136,
        137,
        138,
        139,
        140
    },
    new int[]
    {
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160
    },
    new int[]
    {
        161,
        162,
        163,
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173,
        174,
        175,
        176,
        177,
        178,
        179,
        180
    },
    new int[]
    {
        181,
        182,
        183,
        184,
        185,
        186,
        187,
        188,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200
    },
    new int[]
    {
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        212,
        213,
        214,
        215,
        216,
        217,
        218,
        219,
        220
    },
    new int[]
    {
        221,
        222,
        223,
        224,
        225,
        226,
        227,
        228,
        229,
        230,
        231,
        232,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240
    },
    new int[]
    {
        241,
        242,
        243,
        244,
        245,
        246,
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        254,
        255,
        256,
        257,
        258,
        259,
        260
    },
    new int[]
    {
        261,
        262,
        263,
        264,
        265,
        266,
        267,
        268,
        269,
        270,
        271,
        272,
        273,
        274,
        275,
        276,
        277,
        278,
        279,
        280
    },
    new int[]
    {
        281,
        282,
        283,
        284,
        285,
        286,
        287,
        288,
        289,
        290,
        291,
        292,
        293,
        294,
        295,
        296,
        297,
        298,
        299,
        300
    },
    new int[]
    {
        301,
        302,
        303,
        304,
        305,
        306,
        307,
        308,
        309,
        310,
        311,
        312,
        313,
        314,
        315,
        316,
        317,
        318,
        319,
        320
    },
    new int[]
    {
        321,
        322,
        323,
        324,
        325,
        326,
        327,
        328,
        329,
        330,
        331,
        332,
        333,
        334,
        335,
        336,
        337,
        338,
        339,
        340
    },
    new int[]
    {
        341,
        342,
        343,
        344,
        345,
        346,
        347,
        348,
        349,
        350,
        351,
        352,
        353,
        354,
        355,
        356,
        357,
        358,
        359,
        360
    },
    new int[]
    {
        361,
        362,
        363,
        364,
        365,
        366,
        367,
        368,
        369,
        370,
        371,
        372,
        373,
        374,
        375,
        376,
        377,
        378,
        379,
        380
    },
    new int[]
    {
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389,
        390,
        391,
        392,
        393,
        394,
        395,
        396,
        397,
        398,
        399,
        400
    }
};

int[][][] matrixes = new int[][][]
{
    matrix_3_3,
    matrix_5_5,
    matrix_7_7,
    matrix_10_10,
    matrix_20_20
};

string[] labels = new string[]
{
    "Matrix 3x3",
    "Matrix 5x5",
    "Matrix 7x7",
    "Matrix 10x10",
    "Matrix 20x20"
};

bool isSquareMatrix(int[][] matrix)
{
    foreach (int[] row in matrix)
    {
        if (row.Length != matrix.Length)
            return false;
    }
    return true;
}

void invertSquareMatrix(ref int[][] matrix)
{
    if (!isSquareMatrix(matrix))
        return;

    int halfLength = (int)Math.Ceiling((decimal)matrix.Length / 2);
    for (int i = 0, j = matrix.Length - 1; i < halfLength; i++, j--)
    {
        if (i == j)
            continue;

        int temp = matrix[i][i];
        matrix[i][i] = matrix[j][j];
        matrix[j][j] = temp;
    }
}

void printMatrix(ref int[][] matrix)
{
    foreach (int[] row in matrix)
    {
        foreach (int column in row)
        {
            Console.Write($"{column} ");
        }
        Console.WriteLine();
    }
}

void program()
{
    for (int i = 0; i < matrixes.Length; i++)
    {
        invertSquareMatrix(ref matrixes[i]);

        Console.WriteLine(labels[i] + ":");
        Console.WriteLine();
        printMatrix(ref matrixes[i]);
        Console.WriteLine();
        Console.WriteLine();
    }
}

program();
